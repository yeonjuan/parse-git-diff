// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`issue 31 parse \`31\` 1`] = `
{
  "files": [
    {
      "chunks": [
        {
          "changes": [
            {
              "content": "import { useCallback, useEffect, useState } from 'react'",
              "lineBefore": 1,
              "type": "DeletedLine",
            },
            {
              "content": "import { createContext, useEffect, useState, use, useCallback } from 'react'",
              "lineAfter": 1,
              "type": "AddedLine",
            },
            {
              "content": "import * as ReactDOM from 'react-dom/client'",
              "lineAfter": 2,
              "lineBefore": 2,
              "type": "UnchangedLine",
            },
            {
              "content": "import {",
              "lineAfter": 3,
              "lineBefore": 3,
              "type": "UnchangedLine",
            },
            {
              "content": "       type BlogPost,",
              "lineAfter": 4,
              "lineBefore": 4,
              "type": "UnchangedLine",
            },
          ],
          "context": undefined,
          "fromFileRange": {
            "lines": 4,
            "start": 1,
          },
          "toFileRange": {
            "lines": 4,
            "start": 1,
          },
          "type": "Chunk",
        },
        {
          "changes": [
            {
              "content": "} from '#shared/blog-posts'",
              "lineAfter": 7,
              "lineBefore": 7,
              "type": "UnchangedLine",
            },
            {
              "content": "import { setGlobalSearchParams } from '#shared/utils'",
              "lineAfter": 8,
              "lineBefore": 8,
              "type": "UnchangedLine",
            },
            {
              "content": "",
              "lineAfter": 9,
              "lineBefore": 9,
              "type": "UnchangedLine",
            },
            {
              "content": "// ü¶∫ create a SearchParamsTuple type here that's a readonly array of two elements:",
              "lineBefore": 10,
              "type": "DeletedLine",
            },
            {
              "content": "// - the first element is a URLSearchParams instance",
              "lineBefore": 11,
              "type": "DeletedLine",
            },
            {
              "content": "// - the second element is typeof setGlobalSearchParams",
              "lineBefore": 12,
              "type": "DeletedLine",
            },
            {
              "content": "// üê® create a SearchParamsContext that is of this type",
              "lineBefore": 13,
              "type": "DeletedLine",
            },
            {
              "content": "// üí∞ let's start with this as the default value (we'll improve it next):",
              "lineBefore": 14,
              "type": "DeletedLine",
            },
            {
              "content": "// [new URLSearchParams(window.location.search), setGlobalSearchParams]",
              "lineBefore": 15,
              "type": "DeletedLine",
            },
            {
              "content": "type SearchParamsTuple = readonly [",
              "lineAfter": 10,
              "type": "AddedLine",
            },
            {
              "content": "       URLSearchParams,",
              "lineAfter": 11,
              "type": "AddedLine",
            },
            {
              "content": "       typeof setGlobalSearchParams,",
              "lineAfter": 12,
              "type": "AddedLine",
            },
            {
              "content": "]",
              "lineAfter": 13,
              "type": "AddedLine",
            },
            {
              "content": "const SearchParamsContext = createContext<SearchParamsTuple>([",
              "lineAfter": 14,
              "type": "AddedLine",
            },
            {
              "content": "       new URLSearchParams(window.location.search),",
              "lineAfter": 15,
              "type": "AddedLine",
            },
            {
              "content": "       setGlobalSearchParams,",
              "lineAfter": 16,
              "type": "AddedLine",
            },
            {
              "content": "])",
              "lineAfter": 17,
              "type": "AddedLine",
            },
            {
              "content": "",
              "lineAfter": 18,
              "lineBefore": 16,
              "type": "UnchangedLine",
            },
            {
              "content": "// üê® change this to SearchParamsProvider and accept children",
              "lineBefore": 17,
              "type": "DeletedLine",
            },
            {
              "content": "function useSearchParams() {",
              "lineBefore": 18,
              "type": "DeletedLine",
            },
            {
              "content": "function SearchParamsProvider({ children }: { children: React.ReactNode }) {",
              "lineAfter": 19,
              "type": "AddedLine",
            },
            {
              "content": "       const [searchParams, setSearchParamsState] = useState(",
              "lineAfter": 20,
              "lineBefore": 19,
              "type": "UnchangedLine",
            },
            {
              "content": "               () => new URLSearchParams(window.location.search),",
              "lineAfter": 21,
              "lineBefore": 20,
              "type": "UnchangedLine",
            },
            {
              "content": "       )",
              "lineAfter": 22,
              "lineBefore": 21,
              "type": "UnchangedLine",
            },
          ],
          "context": "import {",
          "fromFileRange": {
            "lines": 15,
            "start": 7,
          },
          "toFileRange": {
            "lines": 16,
            "start": 7,
          },
          "type": "Chunk",
        },
        {
          "changes": [
            {
              "content": "               [],",
              "lineAfter": 47,
              "lineBefore": 46,
              "type": "UnchangedLine",
            },
            {
              "content": "       )",
              "lineAfter": 48,
              "lineBefore": 47,
              "type": "UnchangedLine",
            },
            {
              "content": "",
              "lineAfter": 49,
              "lineBefore": 48,
              "type": "UnchangedLine",
            },
            {
              "content": "       // üê® instead of returning this, render the SearchParamsContext and",
              "lineBefore": 49,
              "type": "DeletedLine",
            },
            {
              "content": "       // provide this tuple as the value",
              "lineBefore": 50,
              "type": "DeletedLine",
            },
            {
              "content": "       // üí∞ make sure to render the children as well!",
              "lineBefore": 51,
              "type": "DeletedLine",
            },
            {
              "content": "       return [searchParams, setSearchParams] as const",
              "lineBefore": 52,
              "type": "DeletedLine",
            },
            {
              "content": "       const searchParamsTuple = [searchParams, setSearchParams] as const",
              "lineAfter": 50,
              "type": "AddedLine",
            },
            {
              "content": "",
              "lineAfter": 51,
              "type": "AddedLine",
            },
            {
              "content": "       return (",
              "lineAfter": 52,
              "type": "AddedLine",
            },
            {
              "content": "               <SearchParamsContext value={searchParamsTuple}>",
              "lineAfter": 53,
              "type": "AddedLine",
            },
            {
              "content": "                       {children}",
              "lineAfter": 54,
              "type": "AddedLine",
            },
            {
              "content": "               </SearchParamsContext>",
              "lineAfter": 55,
              "type": "AddedLine",
            },
            {
              "content": "       )",
              "lineAfter": 56,
              "type": "AddedLine",
            },
            {
              "content": "}",
              "lineAfter": 57,
              "lineBefore": 53,
              "type": "UnchangedLine",
            },
            {
              "content": "",
              "lineAfter": 58,
              "lineBefore": 54,
              "type": "UnchangedLine",
            },
            {
              "content": "// üê® create a useSearchParams hook here that returns use(SearchParamsContext)",
              "lineBefore": 55,
              "type": "DeletedLine",
            },
            {
              "content": "function useSearchParams() {",
              "lineAfter": 59,
              "type": "AddedLine",
            },
            {
              "content": "       return use(SearchParamsContext)",
              "lineAfter": 60,
              "type": "AddedLine",
            },
            {
              "content": "}",
              "lineAfter": 61,
              "type": "AddedLine",
            },
            {
              "content": "",
              "lineAfter": 62,
              "lineBefore": 56,
              "type": "UnchangedLine",
            },
            {
              "content": "const getQueryParam = (params: URLSearchParams) => params.get('query') ?? ''",
              "lineAfter": 63,
              "lineBefore": 57,
              "type": "UnchangedLine",
            },
            {
              "content": "",
              "lineAfter": 64,
              "lineBefore": 58,
              "type": "UnchangedLine",
            },
            {
              "content": "function App() {",
              "lineAfter": 65,
              "lineBefore": 59,
              "type": "UnchangedLine",
            },
            {
              "content": "       return (",
              "lineAfter": 66,
              "lineBefore": 60,
              "type": "UnchangedLine",
            },
            {
              "content": "               // üê® wrap this in the SearchParamsProvider",
              "lineBefore": 61,
              "type": "DeletedLine",
            },
            {
              "content": "               <div className="app">",
              "lineBefore": 62,
              "type": "DeletedLine",
            },
            {
              "content": "                       <Form />",
              "lineBefore": 63,
              "type": "DeletedLine",
            },
            {
              "content": "                       <MatchingPosts />",
              "lineBefore": 64,
              "type": "DeletedLine",
            },
            {
              "content": "               </div>",
              "lineBefore": 65,
              "type": "DeletedLine",
            },
            {
              "content": "               <SearchParamsProvider>",
              "lineAfter": 67,
              "type": "AddedLine",
            },
            {
              "content": "                       <div className="app">",
              "lineAfter": 68,
              "type": "AddedLine",
            },
            {
              "content": "                               <Form />",
              "lineAfter": 69,
              "type": "AddedLine",
            },
            {
              "content": "                               <MatchingPosts />",
              "lineAfter": 70,
              "type": "AddedLine",
            },
            {
              "content": "                       </div>",
              "lineAfter": 71,
              "type": "AddedLine",
            },
            {
              "content": "               </SearchParamsProvider>",
              "lineAfter": 72,
              "type": "AddedLine",
            },
            {
              "content": "       )",
              "lineAfter": 73,
              "lineBefore": 66,
              "type": "UnchangedLine",
            },
            {
              "content": "}",
              "lineAfter": 74,
              "lineBefore": 67,
              "type": "UnchangedLine",
            },
          ],
          "context": "function useSearchParams() {",
          "fromFileRange": {
            "lines": 23,
            "start": 46,
          },
          "toFileRange": {
            "lines": 29,
            "start": 47,
          },
          "type": "Chunk",
        },
      ],
      "path": "var/folders/kt/zd3bfncd0c3gjx25hbcq483c0000gn/T/epicshop/diff/advanced-react-apis/04.01.solution/7h2jowvfi2q/index.tsx",
      "type": "AddedFile",
    },
  ],
  "type": "GitDiff",
}
`;
