// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parseChunks should parse chunks 2. 1`] = `
Array [
  Object {
    "changes": Array [
      Object {
        "content": "/** changed file types */",
        "lineAfter": 18,
        "lineBefore": 18,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 19,
        "lineBefore": 19,
        "type": "Unchanged",
      },
      Object {
        "content": "interface BaseFileChange<Type extends string> extends Base<Type> {",
        "lineAfter": 20,
        "lineBefore": 20,
        "type": "Unchanged",
      },
      Object {
        "content": "  hunks: Hunk[];",
        "lineBefore": 21,
        "type": "Deleted",
      },
      Object {
        "content": "  chunks: Chunk[];",
        "lineAfter": 21,
        "type": "Added",
      },
      Object {
        "content": "}",
        "lineAfter": 22,
        "lineBefore": 22,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 23,
        "lineBefore": 23,
        "type": "Unchanged",
      },
      Object {
        "content": "export interface ChangedFile extends BaseFileChange<'ChangedFile'> {}",
        "lineAfter": 24,
        "lineBefore": 24,
        "type": "Unchanged",
      },
    ],
    "rangeAfter": Object {
      "lines": 7,
      "start": 18,
    },
    "rangeBefore": Object {
      "lines": 7,
      "start": 18,
    },
    "type": "Chunk",
  },
  Object {
    "changes": Array [
      Object {
        "content": "",
        "lineAfter": 40,
        "lineBefore": 40,
        "type": "Unchanged",
      },
      Object {
        "content": "/** hunk */",
        "lineAfter": 41,
        "lineBefore": 41,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 42,
        "lineBefore": 42,
        "type": "Unchanged",
      },
      Object {
        "content": "export interface HunkPos {",
        "lineBefore": 43,
        "type": "Deleted",
      },
      Object {
        "content": "export interface ChunkPos {",
        "lineAfter": 43,
        "type": "Added",
      },
      Object {
        "content": "  start: number;",
        "lineAfter": 44,
        "lineBefore": 44,
        "type": "Unchanged",
      },
      Object {
        "content": "  lines: number;",
        "lineAfter": 45,
        "lineBefore": 45,
        "type": "Unchanged",
      },
      Object {
        "content": "}",
        "lineAfter": 46,
        "lineBefore": 46,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 47,
        "lineBefore": 47,
        "type": "Unchanged",
      },
      Object {
        "content": "export interface Hunk extends Base<'Hunk'> {",
        "lineBefore": 48,
        "type": "Deleted",
      },
      Object {
        "content": "  addedPos: HunkPos;",
        "lineBefore": 49,
        "type": "Deleted",
      },
      Object {
        "content": "  deletedPos: HunkPos;",
        "lineBefore": 50,
        "type": "Deleted",
      },
      Object {
        "content": "export interface Chunk extends Base<'Hunk'> {",
        "lineAfter": 48,
        "type": "Added",
      },
      Object {
        "content": "  addedPos: ChunkPos;",
        "lineAfter": 49,
        "type": "Added",
      },
      Object {
        "content": "  deletedPos: ChunkPos;",
        "lineAfter": 50,
        "type": "Added",
      },
      Object {
        "content": "  changes: AnyChange[];",
        "lineAfter": 51,
        "lineBefore": 51,
        "type": "Unchanged",
      },
      Object {
        "content": "}",
        "lineAfter": 52,
        "lineBefore": 52,
        "type": "Unchanged",
      },
    ],
    "rangeAfter": Object {
      "lines": 13,
      "start": 40,
    },
    "rangeBefore": Object {
      "lines": 13,
      "start": 40,
    },
    "type": "Chunk",
  },
]
`;

exports[`parseChunks should parse chunks. 1`] = `
Array [
  Object {
    "changes": Array [
      Object {
        "content": "/** changed file types */",
        "lineAfter": 18,
        "lineBefore": 18,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 19,
        "lineBefore": 19,
        "type": "Unchanged",
      },
      Object {
        "content": "interface BaseFileChange<Type extends string> extends Base<Type> {",
        "lineAfter": 20,
        "lineBefore": 20,
        "type": "Unchanged",
      },
      Object {
        "content": "  hunks: Hunk[];",
        "lineBefore": 21,
        "type": "Deleted",
      },
      Object {
        "content": "  chunks: Chunk[];",
        "lineAfter": 21,
        "type": "Added",
      },
      Object {
        "content": "}",
        "lineAfter": 22,
        "lineBefore": 22,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 23,
        "lineBefore": 23,
        "type": "Unchanged",
      },
      Object {
        "content": "export interface ChangedFile extends BaseFileChange<'ChangedFile'> {}",
        "lineAfter": 24,
        "lineBefore": 24,
        "type": "Unchanged",
      },
    ],
    "rangeAfter": Object {
      "lines": 7,
      "start": 18,
    },
    "rangeBefore": Object {
      "lines": 7,
      "start": 18,
    },
    "type": "Chunk",
  },
  Object {
    "changes": Array [
      Object {
        "content": "",
        "lineAfter": 40,
        "lineBefore": 40,
        "type": "Unchanged",
      },
      Object {
        "content": "/** hunk */",
        "lineAfter": 41,
        "lineBefore": 41,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 42,
        "lineBefore": 42,
        "type": "Unchanged",
      },
      Object {
        "content": "export interface HunkPos {",
        "lineBefore": 43,
        "type": "Deleted",
      },
      Object {
        "content": "export interface ChunkPos {",
        "lineAfter": 43,
        "type": "Added",
      },
      Object {
        "content": "  start: number;",
        "lineAfter": 44,
        "lineBefore": 44,
        "type": "Unchanged",
      },
      Object {
        "content": "  lines: number;",
        "lineAfter": 45,
        "lineBefore": 45,
        "type": "Unchanged",
      },
      Object {
        "content": "}",
        "lineAfter": 46,
        "lineBefore": 46,
        "type": "Unchanged",
      },
      Object {
        "content": "",
        "lineAfter": 47,
        "lineBefore": 47,
        "type": "Unchanged",
      },
      Object {
        "content": "export interface Hunk extends Base<'Hunk'> {",
        "lineBefore": 48,
        "type": "Deleted",
      },
      Object {
        "content": "  addedPos: HunkPos;",
        "lineBefore": 49,
        "type": "Deleted",
      },
      Object {
        "content": "  deletedPos: HunkPos;",
        "lineBefore": 50,
        "type": "Deleted",
      },
      Object {
        "content": "export interface Chunk extends Base<'Hunk'> {",
        "lineAfter": 48,
        "type": "Added",
      },
      Object {
        "content": "  addedPos: ChunkPos;",
        "lineAfter": 49,
        "type": "Added",
      },
      Object {
        "content": "  deletedPos: ChunkPos;",
        "lineAfter": 50,
        "type": "Added",
      },
      Object {
        "content": "  changes: AnyChange[];",
        "lineAfter": 51,
        "lineBefore": 51,
        "type": "Unchanged",
      },
      Object {
        "content": "}",
        "lineAfter": 52,
        "lineBefore": 52,
        "type": "Unchanged",
      },
    ],
    "rangeAfter": Object {
      "lines": 13,
      "start": 40,
    },
    "rangeBefore": Object {
      "lines": 13,
      "start": 40,
    },
    "type": "Chunk",
  },
]
`;
